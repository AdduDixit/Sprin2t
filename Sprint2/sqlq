create table Test(
	name varchar(255)
);

select * from Test;

insert into Test values('Adwait D');

create table Users(
	user_id int
	
);


select * from orders;

select * from Login;

update Login set user_id = 2 
where username = 'ad2@gmail.com';

alter table Login alter column user_id set not null;

alter table Login add constraint pk_Login_table primary key (user_id);
insert into Login values('ad2@gmail.com', 'adwait');


create table  Login(
	username varchar(200),
	password varchar(200)
);

--alter table Login add constraint nn user_id int not null;

CREATE TABLE products (
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    description VARCHAR(500),
    stock INT NOT NULL
);

select * from products;

insert into PRODUCTS(name, price, description, stock) values('iPhone XR', 65999, 'A good phone', 440);

INSERT INTO products (name, price, description, stock) 
VALUES 
('Laptop', 799.99, 'High-performance laptop with 16GB RAM', 10),
('Smartphone', 499.99, 'Latest smartphone with OLED display', 15),
('Headphones', 99.99, 'Noise-canceling over-ear headphones', 25),
('Gaming Mouse', 39.99, 'Ergonomic gaming mouse with RGB lighting', 30),
('Wireless Keyboard', 59.99, 'Bluetooth-enabled mechanical keyboard', 20);





CREATE TABLE orders (
    id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    total_price DECIMAL(10,2) NOT NULL,
    order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


select * from order_items;

select * from orders;


Alter table order_items add column price decimal(10,2);

select * from order_items;

alter table orders add column user_id int ; 

alter table orders alter column user_id set not null;

update orders set user_id = 1 where user_id is null;

not null;

alter table orders add constraint fk_orders_and_user foreign key (user_id) references Login(user_id) on delete cascade;


create table order_items (
	id int primary key generated always as identity( start with 1, increment by 1),
	order_id int not null,
	product_name varchar(255) not null,
	quantity int not null,
	foreign key(order_id) references orders(id) on delete cascade
);


select count(product_name), product_name from order_items group by product_name order by count(product_name) desc;

order by count(product_name);



select * from order_items;

select * from orders  where user_id = 1 order by total_price desc;


-- this is the join query to see order history of user

-- orders has user ID
select orders.id, orders.user_id, orders.total_price,  orders.order_date,  order_items.product_name,  order_items.quantity
from orders 
inner join order_items 
on orders.id = order_items.order_id   
where user_id = 1;




select * from Login;



















